{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","activeButtons","App","useState","showGoods","setShowGoods","sortType","setSortType","reverse","setReverse","preparedGoods","goods","isReversed","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","setActiveButton","addElement","removeElements","includes","index","indexOf","splice","push","className","type","onClick","classNames","active","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,oEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0BL,IAAIE,EAA0B,GAEjBC,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAzBR,SAA2BC,EAAiBL,EAAoBM,GAC9D,IAAMC,EAAe,YAAIF,GAAOG,MAAK,SAACC,EAAGC,GACvC,OAAQV,GACN,KAAKP,EAASkB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKjB,EAASoB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAIb,OAAIR,EACKC,EAAaL,UAGfK,EAUHQ,CAAkBrB,EAAiBM,EAAUE,GAE3Cc,EAAkB,SAACC,GAAgD,IAA5BC,EAA2B,wDAKtE,GAJIA,IACFvB,EAAgB,IAGbA,EAAcwB,SAASF,IAErB,GAAmB,YAAfA,GAA4BtB,EAAcwB,SAASF,GAAa,CACzE,IAAMG,EAAQzB,EAAc0B,QAAQJ,GAEpCtB,EAAc2B,OAAOF,EAAO,SAJ5BzB,EAAc4B,KAAKN,IAQvB,OACE,qBAAKO,UAAU,MAAf,UACK1B,GAEC,wBACE2B,KAAK,SACLD,UAAU,SACVE,QAAS,kBACP3B,GAAa,IAJjB,oBAUF,qCACE,sBAAKyB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWG,IAAW,SACpB,CAAEC,OAAQjC,EAAcwB,SAAS,WACnCO,QAAS,WACPzB,EAAY,GACZe,EAAgB,SAAS,IAN7B,iCAWA,wBACES,KAAK,SACLD,UAAWG,IAAW,SACpB,CAAEC,OAAQjC,EAAcwB,SAAS,YACnCO,QAAS,WACPzB,EAAY,GACZe,EAAgB,UAAU,IAN9B,4BAWA,wBACES,KAAK,SACLD,UAAWG,IAAW,SACpB,CAAEC,OAAQjC,EAAcwB,SAAS,aACnCO,QAAS,WACPvB,GAAYD,GACZc,EAAgB,YANpB,qBAWA,wBACES,KAAK,SACLD,UAAU,SACVE,QAAS,WACPzB,EAAY,GACZE,GAAW,GACXa,EAAgB,IAAI,IANxB,sBAYF,oBAAIQ,UAAU,QAAd,SACGpB,EAAcyB,KAAI,SAAAC,GAAI,OACrB,oBAAeN,UAAU,cAAzB,SAAwCM,GAA/BA,cC/HvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56e18f9b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport classNames from 'classnames';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// eslint-disable-next-line max-len\nfunction getReorderedGoods(goods: string[], sortType: SortType, isReversed: boolean) {\n  const visibleGoods = [...goods].sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nlet activeButtons: string[] = [];\n\nexport const App: React.FC = () => {\n  const [showGoods, setShowGoods] = useState(false);\n  const [sortType, setSortType] = useState(0);\n  const [reverse, setReverse] = useState(false);\n  const preparedGoods\n    = getReorderedGoods(goodsFromServer, sortType, reverse);\n\n  const setActiveButton = (addElement: string, removeElements = false) => {\n    if (removeElements) {\n      activeButtons = [];\n    }\n\n    if (!activeButtons.includes(addElement)) {\n      activeButtons.push(addElement);\n    } else if (addElement === 'reverse' && activeButtons.includes(addElement)) {\n      const index = activeButtons.indexOf(addElement);\n\n      activeButtons.splice(index, 1);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {(!showGoods\n        && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => (\n              setShowGoods(true)\n            )}\n          >\n            Start\n          </button>\n        )) || (\n        <>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={classNames('button',\n                { active: activeButtons.includes('alpha') })}\n              onClick={() => {\n                setSortType(1);\n                setActiveButton('alpha', true);\n              }}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className={classNames('button',\n                { active: activeButtons.includes('length') })}\n              onClick={() => {\n                setSortType(2);\n                setActiveButton('length', true);\n              }}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              className={classNames('button',\n                { active: activeButtons.includes('reverse') })}\n              onClick={() => {\n                setReverse(!reverse);\n                setActiveButton('reverse');\n              }}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                setSortType(0);\n                setReverse(false);\n                setActiveButton('', true);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          <ul className=\"Goods\">\n            {preparedGoods.map(good => (\n              <li key={good} className=\"Goods__item\">{good}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}