{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isGoodsVisible","setIsGoodsVisible","NONE","sortType","setSortType","reverse","setReverse","preparedGoods","goods","isReversed","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","onClick","cn","active","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsBE,IAAME,EAAgB,WAC3B,MAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAnBR,SAA2BC,EAAiBL,EAAoBM,GAC9D,IAAMC,EAAe,YAAIF,GAAOG,MAAK,SAACC,EAAGC,GACvC,OAAQV,GACN,KAAKP,EAASkB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKjB,EAASoB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAIb,OAAOR,EAAaC,EAAaL,UAAYK,EAQzCQ,CAAkBrB,EAAiBM,EAAUE,GAEjD,OACE,sBAAKc,UAAU,MAAf,WACKnB,GACD,wBACEoB,KAAK,SACLD,UAAU,SACVE,QAAS,kBACPpB,GAAkB,IAJtB,mBAWAD,GACA,qCACE,sBAAKmB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWG,IAAG,SACZ,CAAEC,OAAQpB,IAAaP,EAASkB,WAClCO,QAAS,WACPjB,EAAYR,EAASkB,WALzB,iCAUA,wBACEM,KAAK,SACLD,UAAWG,IAAG,SACZ,CAAEC,OAAQpB,IAAaP,EAASoB,SAClCK,QAAS,WACPjB,EAAYR,EAASoB,SALzB,4BAUA,wBACEI,KAAK,SACLD,UAAWG,IAAG,SAAU,CAAEC,OAAQlB,IAClCgB,QAAS,WACPf,GAAYD,IAJhB,qBASA,wBACEe,KAAK,SACLD,UAAU,SACVE,QAAS,WACPjB,EAAYR,EAASM,MACrBI,GAAW,IALf,sBAWF,oBAAIa,UAAU,QAAd,SACGZ,EAAciB,KAAI,SAAAC,GAAI,OACrB,oBAAeN,UAAU,cAAzB,SAAwCM,GAA/BA,eCtGvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eedee767.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport cn from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// eslint-disable-next-line max-len\nfunction getReorderedGoods(goods: string[], sortType: SortType, isReversed: boolean) {\n  const visibleGoods = [...goods].sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isGoodsVisible, setIsGoodsVisible] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [reverse, setReverse] = useState(false);\n  const preparedGoods\n    = getReorderedGoods(goodsFromServer, sortType, reverse);\n\n  return (\n    <div className=\"App\">\n      {(!isGoodsVisible && (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => (\n            setIsGoodsVisible(true)\n          )}\n        >\n          Start\n        </button>\n      ))}\n\n      {(isGoodsVisible && (\n        <>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={cn('button',\n                { active: sortType === SortType.ALPHABET })}\n              onClick={() => {\n                setSortType(SortType.ALPHABET);\n              }}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className={cn('button',\n                { active: sortType === SortType.LENGTH })}\n              onClick={() => {\n                setSortType(SortType.LENGTH);\n              }}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              className={cn('button', { active: reverse })}\n              onClick={() => {\n                setReverse(!reverse);\n              }}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setReverse(false);\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          <ul className=\"Goods\">\n            {preparedGoods.map(good => (\n              <li key={good} className=\"Goods__item\">{good}</li>\n            ))}\n          </ul>\n        </>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}