{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","showGoods","setShowGoods","sortType","setSortType","reverse","setReverse","activeButton","setActiveButton","preparedGoods","goods","isReversed","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","onClick","classNames","active","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,oEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0BE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAzBR,SAA2BC,EAAiBP,EAAoBQ,GAC9D,IAAMC,EAAe,YAAIF,GAAOG,MAAK,SAACC,EAAGC,GACvC,OAAQZ,GACN,KAAKN,EAASmB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKlB,EAASqB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAIb,OAAIR,EACKC,EAAaP,UAGfO,EAUHQ,CAAkBtB,EAAiBK,EAAUE,GAEjD,OACE,qBAAKgB,UAAU,MAAf,UACKpB,GAEC,wBACEqB,KAAK,SACLD,UAAU,SACVE,QAAS,kBACPrB,GAAa,IAJjB,oBAUF,qCACE,sBAAKmB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWG,IAAW,SACpB,CAAEC,OAAyB,UAAjBlB,IACZgB,QAAS,WACPnB,EAAY,GACZI,EAAgB,UANpB,iCAWA,wBACEc,KAAK,SACLD,UAAWG,IAAW,SACpB,CAAEC,OAAyB,WAAjBlB,IACZgB,QAAS,WACPnB,EAAY,GACZI,EAAgB,WANpB,4BAWA,wBACEc,KAAK,SACLD,UAAWG,IAAW,SACpB,CAAEC,OAAyB,YAAjBlB,IACZgB,QAAS,WACPjB,GAAYD,GACZG,EAAgB,YANpB,qBAWA,wBACEc,KAAK,SACLD,UAAWG,IAAW,SACpB,CAAEC,OAAyB,UAAjBlB,IACZgB,QAAS,WACPnB,EAAY,GACZE,GAAW,GACXE,EAAgB,UAPpB,sBAaF,oBAAIa,UAAU,QAAd,SACGZ,EAAciB,KAAI,SAAAC,GAAI,OACrB,oBAAeN,UAAU,cAAzB,SAAwCM,GAA/BA,cClHvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1be728d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport classNames from 'classnames';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// eslint-disable-next-line max-len\nfunction getReorderedGoods(goods: string[], sortType: SortType, isReversed: boolean) {\n  const visibleGoods = [...goods].sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [showGoods, setShowGoods] = useState(false);\n  const [sortType, setSortType] = useState(0);\n  const [reverse, setReverse] = useState(false);\n  const [activeButton, setActiveButton] = useState('');\n\n  const preparedGoods\n    = getReorderedGoods(goodsFromServer, sortType, reverse);\n\n  return (\n    <div className=\"App\">\n      {(!showGoods\n        && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => (\n              setShowGoods(true)\n            )}\n          >\n            Start\n          </button>\n        )) || (\n        <>\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={classNames('button',\n                { active: activeButton === 'alpha' })}\n              onClick={() => {\n                setSortType(1);\n                setActiveButton('alpha');\n              }}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className={classNames('button',\n                { active: activeButton === 'length' })}\n              onClick={() => {\n                setSortType(2);\n                setActiveButton('length');\n              }}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              className={classNames('button',\n                { active: activeButton === 'reverse' })}\n              onClick={() => {\n                setReverse(!reverse);\n                setActiveButton('reverse');\n              }}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className={classNames('button',\n                { active: activeButton === 'reset' })}\n              onClick={() => {\n                setSortType(0);\n                setReverse(false);\n                setActiveButton('reset');\n              }}\n            >\n              Reset\n            </button>\n          </div>\n          <ul className=\"Goods\">\n            {preparedGoods.map(good => (\n              <li key={good} className=\"Goods__item\">{good}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}